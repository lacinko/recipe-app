[{"D:\\ProgrammingProjects\\recipe-app\\src\\index.js":"1","D:\\ProgrammingProjects\\recipe-app\\src\\App.js":"2","D:\\ProgrammingProjects\\recipe-app\\src\\pages\\addRecipe.js":"3","D:\\ProgrammingProjects\\recipe-app\\src\\pages\\recipes.js":"4","D:\\ProgrammingProjects\\recipe-app\\src\\pages\\recipeDetail.js":"5","D:\\ProgrammingProjects\\recipe-app\\src\\services\\firestore.js":"6","D:\\ProgrammingProjects\\recipe-app\\src\\components\\Navbar.js":"7","D:\\ProgrammingProjects\\recipe-app\\src\\contexts\\AuthContext.js":"8","D:\\ProgrammingProjects\\recipe-app\\src\\components\\SignUp.jsx":"9","D:\\ProgrammingProjects\\recipe-app\\src\\components\\Login.jsx":"10","D:\\ProgrammingProjects\\recipe-app\\src\\components\\PasswordReset.jsx":"11","D:\\ProgrammingProjects\\recipe-app\\src\\components\\UpdateProfile.jsx":"12","D:\\ProgrammingProjects\\recipe-app\\src\\recipeContext.js":"13","D:\\ProgrammingProjects\\recipe-app\\src\\contexts\\DatabaseContext.js":"14"},{"size":573,"mtime":1627944288842,"results":"15","hashOfConfig":"16"},{"size":1626,"mtime":1627946402746,"results":"17","hashOfConfig":"16"},{"size":7057,"mtime":1627947017641,"results":"18","hashOfConfig":"16"},{"size":4506,"mtime":1627840908640,"results":"19","hashOfConfig":"16"},{"size":2819,"mtime":1627919076640,"results":"20","hashOfConfig":"16"},{"size":1963,"mtime":1627943210076,"results":"21","hashOfConfig":"16"},{"size":1196,"mtime":1627939848354,"results":"22","hashOfConfig":"16"},{"size":1380,"mtime":1627940255340,"results":"23","hashOfConfig":"16"},{"size":1907,"mtime":1627938023481,"results":"24","hashOfConfig":"16"},{"size":1521,"mtime":1627938025535,"results":"25","hashOfConfig":"16"},{"size":1516,"mtime":1627938851112,"results":"26","hashOfConfig":"16"},{"size":2079,"mtime":1627941156341,"results":"27","hashOfConfig":"16"},{"size":1120,"mtime":1627943270979,"results":"28","hashOfConfig":"16"},{"size":952,"mtime":1627946293955,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"apipf1",{"filePath":"33","messages":"34","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"32"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"32"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"32"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"32"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\ProgrammingProjects\\recipe-app\\src\\index.js",[],["64","65"],"D:\\ProgrammingProjects\\recipe-app\\src\\App.js",["66","67","68","69","70","71"],"D:\\ProgrammingProjects\\recipe-app\\src\\pages\\addRecipe.js",["72","73"],"D:\\ProgrammingProjects\\recipe-app\\src\\pages\\recipes.js",["74"],"import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../styles/recipes.css\";\r\nimport { updateRecipesDB } from \"../services/firestore\";\r\n\r\nexport const Recipes = ({ recipes }) => {\r\n  const [searchValue, setSearchValue] = useState({\r\n    text: \"\",\r\n    isSorted: false,\r\n  });\r\n  const [sortedArr, setSortedArr] = useState(recipes);\r\n\r\n  function handleChange(e) {\r\n    const { name, value } = e.target;\r\n    setSearchValue((prevValue) => ({\r\n      ...prevValue,\r\n      [name]: value,\r\n    }));\r\n  }\r\n\r\n  function sortBy(e) {\r\n    let sortedRecipes;\r\n\r\n    switch (e.target.name) {\r\n      case \"prepTime\":\r\n        if (searchValue.isSorted) {\r\n          sortedRecipes = [...sortedArr].sort((a, b) =>\r\n            parseInt(a[e.target.name]) > parseInt(b[e.target.name]) ? -1 : 1\r\n          );\r\n          setSearchValue((prevState) => ({\r\n            ...prevState,\r\n            isSorted: !prevState.isSorted,\r\n          }));\r\n        } else {\r\n          sortedRecipes = [...sortedArr].sort((a, b) =>\r\n            parseInt(a[e.target.name]) > parseInt(b[e.target.name]) ? 1 : -1\r\n          );\r\n          setSearchValue((prevState) => ({\r\n            ...prevState,\r\n            isSorted: !prevState.isSorted,\r\n          }));\r\n        }\r\n        setSortedArr(sortedRecipes);\r\n        break;\r\n      case \"difficulty\":\r\n        if (searchValue.isSorted) {\r\n          sortedRecipes = [...sortedArr].sort((a, b) =>\r\n            a[e.target.name] === \"Beginner\"\r\n              ? -1\r\n              : b[e.target.name] === \"Expert\"\r\n              ? -1\r\n              : 1\r\n          );\r\n          setSearchValue((prevState) => ({\r\n            ...prevState,\r\n            isSorted: !prevState.isSorted,\r\n          }));\r\n        } else {\r\n          sortedRecipes = [...sortedArr].sort((a, b) =>\r\n            a[e.target.name] === \"Beginner\"\r\n              ? 1\r\n              : b[e.target.name] === \"Expert\"\r\n              ? 1\r\n              : -1\r\n          );\r\n          setSearchValue((prevState) => ({\r\n            ...prevState,\r\n            isSorted: !prevState.isSorted,\r\n          }));\r\n        }\r\n        setSortedArr(sortedRecipes);\r\n        break;\r\n      default:\r\n        if (searchValue.isSorted) {\r\n          sortedRecipes = [...sortedArr].sort((a, b) =>\r\n            a[e.target.name] > b[e.target.name] ? -1 : 1\r\n          );\r\n          setSearchValue((prevState) => ({\r\n            ...prevState,\r\n            isSorted: !prevState.isSorted,\r\n          }));\r\n        } else {\r\n          sortedRecipes = [...sortedArr].sort((a, b) =>\r\n            a[e.target.name] > b[e.target.name] ? 1 : -1\r\n          );\r\n          setSearchValue((prevState) => ({\r\n            ...prevState,\r\n            isSorted: !prevState.isSorted,\r\n          }));\r\n        }\r\n        setSortedArr(sortedRecipes);\r\n        break;\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    searchValue.text\r\n      ? setSortedArr(\r\n          [...sortedArr].filter((recipe) =>\r\n            recipe.title.toLowerCase().includes(searchValue.text.toLowerCase())\r\n          )\r\n        )\r\n      : console.log(\"notext\");\r\n    // eslint-disable-next-line\r\n  }, [searchValue.text]);\r\n\r\n  return (\r\n    <div className=\"recipes\">\r\n      <div className=\"recipes-menu\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Search for recipe\"\r\n          onChange={handleChange}\r\n          value={searchValue.text}\r\n          name=\"text\"\r\n        />\r\n        <button onClick={sortBy} name=\"name\">\r\n          SORT BY NAME\r\n        </button>\r\n        <button onClick={sortBy} name=\"difficulty\">\r\n          SORT BY DIFFICULTY\r\n        </button>\r\n        <button onClick={sortBy} name=\"prepTime\">\r\n          SORT BY PREPARATION TIME\r\n        </button>\r\n      </div>\r\n      <ul className=\"recipes-list\">\r\n        {sortedArr\r\n          ? sortedArr.map((recipe, idx) => (\r\n              <li key={recipe.id}>\r\n                <div className=\"recipes-top\">\r\n                  <Link className=\"recipes__link\" to={`/recipes/${recipe.id}`}>\r\n                    <h3>{recipe.title}</h3>\r\n                  </Link>\r\n                  <div className=\"recipes-top-info\">\r\n                    <h5>Preparation time: {recipe.prepTime + \" min\"}</h5>\r\n                    <h5>Difficulty level: {recipe.difficulty}</h5>\r\n                    <h5>Number of servings: {recipe.rations}</h5>\r\n                  </div>\r\n                </div>\r\n              </li>\r\n            ))\r\n          : \"<h2>NO DATA</h2>\"}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n","D:\\ProgrammingProjects\\recipe-app\\src\\pages\\recipeDetail.js",["75","76"],"import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport \"../styles/recipeDetail.css\";\r\nimport { updateRecipeDB } from \"../services/firestore\";\r\n\r\nexport const RecipeDetail = ({ recipes, editRecipe }) => {\r\n  console.log(recipes);\r\n  const { recipeId } = useParams();\r\n  const [recipe, setRecipe] = useState(\r\n    recipes.find((recipe) => recipe.id === recipeId)\r\n  );\r\n  console.log(\"Length\" + JSON.stringify(recipe));\r\n  /*const [sortedArr, setSortedArr] = useState(\r\n    JSON.parse(localStorage.getItem(\"recipes\"))\r\n  );\r\n  const recipe = sortedArr.find((recipe) => recipe.id === recipeId);*/\r\n  const [note, setNote] = useState(\"\");\r\n\r\n  function handleChange(e) {\r\n    const { value } = e.target;\r\n    setNote(value);\r\n  }\r\n\r\n  function submitNote(e) {\r\n    //editRecipe(note, recipeId);\r\n    updateRecipeDB(note, recipeId);\r\n    editRecipe();\r\n    //setSortedArr(JSON.parse(localStorage.getItem(\"recipes\")));\r\n    setNote(\"\");\r\n  }\r\n  /*\r\n  useEffect(() => {\r\n    setNote(\"\");\r\n    console.log(note);\r\n  }, [sortedArr]);\r\n*/\r\n\r\n  return (\r\n    <div className=\"recipeDetail\">\r\n      <div className=\"recipeDetail__heading\">\r\n        <h3>{recipe.title}</h3>\r\n        <div className=\"recipeDetail__header\">\r\n          <h5>Preparation time: {recipe.prepTime + \" min\"}</h5>\r\n          <h5>Difficulty level: {recipe.difficulty}</h5>\r\n          <h5>Number of servings: {recipe.rations}</h5>\r\n        </div>\r\n      </div>\r\n      <div className=\"recipeDetail__main\">\r\n        <div className=\"recipeDetail__list\">\r\n          <h3 className=\"recipeDetail__title\">List of ingredients</h3>\r\n          <ul>\r\n            {recipe.listOfIngredients.length > 0 ? (\r\n              recipe.listOfIngredients.map((ing, idx) => (\r\n                <li key={idx}> {ing} </li>\r\n              ))\r\n            ) : (\r\n              <h4>No ingredients</h4>\r\n            )}\r\n          </ul>\r\n        </div>\r\n        <div className=\"recipeDetail__method\">\r\n          <h3 className=\"recipeDetail__title\">Method</h3>\r\n          <ol>\r\n            {recipe.method.length > 0 ? (\r\n              recipe.method.map((ing, idx) => (\r\n                <li className=\"recipeDetail__step\" key={idx}>\r\n                  {ing}\r\n                </li>\r\n              ))\r\n            ) : (\r\n              <h4>No ingredients</h4>\r\n            )}\r\n          </ol>\r\n        </div>\r\n      </div>\r\n      <div className=\"recipeDetail__comments\">\r\n        {recipe.note\r\n          ? recipe.note.map((note, idx) => (\r\n              <p key={`ID${note}${idx}`}>{note}</p>\r\n            ))\r\n          : \"<h2>No Comments yet!</h2>\"}\r\n\r\n        <h3>Add a note</h3>\r\n        <textarea name=\"note\" id=\"\" onChange={handleChange}></textarea>\r\n        <button onClick={submitNote}>ADD NOTE</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","D:\\ProgrammingProjects\\recipe-app\\src\\services\\firestore.js",["77"],"// Firebase App (the core Firebase SDK) is always required and must be listed first\r\nimport firebase from \"firebase/app\";\r\n// If you are using v7 or any earlier version of the JS SDK, you should import firebase using namespace import\r\n// import * as firebase from \"firebase/app\"\r\n\r\n// If you enabled Analytics in your project, add the Firebase SDK for Analytics\r\nimport \"firebase/analytics\";\r\n\r\n// Add the Firebase products that you want to use\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\n\r\nconst firebaseConfig = firebase.initializeApp({\r\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\r\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\r\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\r\n  appId: process.env.REACT_APP_FIREBASE_APP_ID,\r\n  measurementId: process.env.REACT_APP_FIREBASE_MEASUREMENT_ID,\r\n});\r\n\r\nexport const auth = firebaseConfig.auth();\r\nexport default firebaseConfig;\r\n\r\nexport const db = firebase.firestore();\r\n\r\nexport const addRecipeToDB = (recipe) => {\r\n  return db\r\n    .collection(\"recipesDB\")\r\n    .doc(recipe.id)\r\n    .set(\r\n      recipe,\r\n      (recipe.date = firebase.firestore.FieldValue.serverTimestamp())\r\n    );\r\n};\r\n\r\nexport const updateRecipesDB = async () => {\r\n  const data = [];\r\n  const call = await db\r\n    .collection(\"recipesDB\")\r\n    .get()\r\n    .then((querySnapshot) => {\r\n      querySnapshot.forEach((doc) => {\r\n        console.log(doc.id, \" => \", doc.data());\r\n        data.push(doc.data());\r\n      });\r\n    });\r\n  return data;\r\n};\r\n\r\nexport const updateRecipeDB = (noteTxt, id) => {\r\n  const recipesDB = db.collection(\"recipesDB\").doc(id);\r\n  recipesDB.update({\r\n    note: firebase.firestore.FieldValue.arrayUnion(noteTxt),\r\n  });\r\n};\r\n\r\nexport const streamRecipesDB = (observer) => {\r\n  return db.collection(\"recipesDB\").onSnapshot(observer);\r\n};\r\n","D:\\ProgrammingProjects\\recipe-app\\src\\components\\Navbar.js",["78"],"import React, { useState } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { useAuth } from \"../contexts/AuthContext\";\r\nimport \"../styles/Navbar.css\";\r\n\r\nexport const Navbar = () => {\r\n  const [error, setError] = useState(\"\");\r\n  const { currentUser, logout } = useAuth();\r\n  const history = useHistory();\r\n\r\n  const handleLogOut = async () => {\r\n    setError(\"\");\r\n    try {\r\n      await logout();\r\n      history.push(\"/\");\r\n    } catch (error) {\r\n      setError(\"Failed to Log Out!\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"navbar\">\r\n      <nav>\r\n        <Link className=\"logo-link\" to=\"/sign-up\">\r\n          <h1 className=\"logo\">\r\n            Digital CookBook <img src=\"/cookbook-logo.png\" alt=\"logo\" />\r\n          </h1>\r\n        </Link>\r\n        <Link to=\"/add-recipe\">Add new recipe</Link>\r\n        <Link to=\"/recipes\">Recipes</Link>\r\n        {currentUser && <Link to=\"/update-profile\">Profile</Link>}\r\n        <strong>\r\n          {currentUser && `Logged in as ${currentUser.email}`}\r\n          <button onClick={handleLogOut}>\r\n            {currentUser ? \"Log Out\" : \"Log In\"}\r\n          </button>\r\n        </strong>\r\n      </nav>\r\n    </div>\r\n  );\r\n};\r\n","D:\\ProgrammingProjects\\recipe-app\\src\\contexts\\AuthContext.js",[],"D:\\ProgrammingProjects\\recipe-app\\src\\components\\SignUp.jsx",[],"D:\\ProgrammingProjects\\recipe-app\\src\\components\\Login.jsx",[],"D:\\ProgrammingProjects\\recipe-app\\src\\components\\PasswordReset.jsx",["79"],"import React, { useRef, useState } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { useAuth } from \"../contexts/AuthContext\";\r\nimport \"../styles/PasswordReset.css\";\r\n\r\nexport const PasswordReset = () => {\r\n  const emailRef = useRef();\r\n  const { resetPassword } = useAuth();\r\n  const [error, setError] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      setError(\"\");\r\n      setMessage(\"\");\r\n      setLoading(true);\r\n      await resetPassword(emailRef.current.value);\r\n      setMessage(\"Check your inbox for further instructions!\");\r\n    } catch (error) {\r\n      setError(\"Failed to reset password!\");\r\n    }\r\n\r\n    setLoading(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"signup\">\r\n      <h2>Reset Password</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        {error && <h2 style={{ color: \"red\" }}>{error}</h2>}\r\n        {message && <h2 style={{ color: \"green\" }}>{message}</h2>}\r\n        <label>Email</label>\r\n        <input type=\"email\" name=\"email\" required ref={emailRef} />\r\n        <button disabled={loading} type=\"submit\">\r\n          Reset Password\r\n        </button>\r\n        <button disabled={loading} type=\"submit\">\r\n          <Link to=\"/\">Log In</Link>\r\n        </button>\r\n      </form>\r\n      <div className=\"link-container\">\r\n        Need an account? <Link to=\"/sign-up\">Sign Up</Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","D:\\ProgrammingProjects\\recipe-app\\src\\components\\UpdateProfile.jsx",[],"D:\\ProgrammingProjects\\recipe-app\\src\\recipeContext.js",["80","81"],"D:\\ProgrammingProjects\\recipe-app\\src\\contexts\\DatabaseContext.js",[],{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","severity":1,"message":"87","line":1,"column":10,"nodeType":"88","messageId":"89","endLine":1,"endColumn":20},{"ruleId":"86","severity":1,"message":"90","line":1,"column":22,"nodeType":"88","messageId":"89","endLine":1,"endColumn":31},{"ruleId":"86","severity":1,"message":"91","line":1,"column":33,"nodeType":"88","messageId":"89","endLine":1,"endColumn":41},{"ruleId":"86","severity":1,"message":"92","line":3,"column":10,"nodeType":"88","messageId":"89","endLine":3,"endColumn":23},{"ruleId":"86","severity":1,"message":"93","line":10,"column":10,"nodeType":"88","messageId":"89","endLine":10,"endColumn":25},{"ruleId":"86","severity":1,"message":"94","line":11,"column":13,"nodeType":"88","messageId":"89","endLine":11,"endColumn":29},{"ruleId":"95","severity":1,"message":"96","line":88,"column":29,"nodeType":"97","messageId":"98","endLine":88,"endColumn":31},{"ruleId":"95","severity":1,"message":"96","line":96,"column":58,"nodeType":"97","messageId":"98","endLine":96,"endColumn":60},{"ruleId":"86","severity":1,"message":"93","line":4,"column":10,"nodeType":"88","messageId":"89","endLine":4,"endColumn":25},{"ruleId":"86","severity":1,"message":"90","line":1,"column":17,"nodeType":"88","messageId":"89","endLine":1,"endColumn":26},{"ruleId":"86","severity":1,"message":"99","line":9,"column":18,"nodeType":"88","messageId":"89","endLine":9,"endColumn":27},{"ruleId":"86","severity":1,"message":"100","line":40,"column":9,"nodeType":"88","messageId":"89","endLine":40,"endColumn":13},{"ruleId":"86","severity":1,"message":"101","line":7,"column":10,"nodeType":"88","messageId":"89","endLine":7,"endColumn":15},{"ruleId":"86","severity":1,"message":"102","line":2,"column":16,"nodeType":"88","messageId":"89","endLine":2,"endColumn":26},{"ruleId":"86","severity":1,"message":"87","line":1,"column":27,"nodeType":"88","messageId":"89","endLine":1,"endColumn":37},{"ruleId":"86","severity":1,"message":"103","line":2,"column":8,"nodeType":"88","messageId":"89","endLine":2,"endColumn":16},"no-native-reassign",["104"],"no-negated-in-lhs",["105"],"no-unused-vars","'useContext' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'useState' is defined but never used.","'RecipeContext' is defined but never used.","'updateRecipesDB' is defined but never used.","'FirestoreService' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'setRecipe' is assigned a value but never used.","'call' is assigned a value but never used.","'error' is assigned a value but never used.","'useHistory' is defined but never used.","'firebase' is defined but never used.","no-global-assign","no-unsafe-negation"]