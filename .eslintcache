[{"D:\\ProgrammingProjects\\recipe-app\\src\\index.js":"1","D:\\ProgrammingProjects\\recipe-app\\src\\App.js":"2","D:\\ProgrammingProjects\\recipe-app\\src\\pages\\addRecipe.js":"3","D:\\ProgrammingProjects\\recipe-app\\src\\pages\\recipes.js":"4","D:\\ProgrammingProjects\\recipe-app\\src\\pages\\recipeDetail.js":"5","D:\\ProgrammingProjects\\recipe-app\\src\\services\\firestore.js":"6","D:\\ProgrammingProjects\\recipe-app\\src\\components\\Navbar.js":"7","D:\\ProgrammingProjects\\recipe-app\\src\\contexts\\AuthContext.js":"8","D:\\ProgrammingProjects\\recipe-app\\src\\components\\SignUp.jsx":"9","D:\\ProgrammingProjects\\recipe-app\\src\\components\\Login.jsx":"10","D:\\ProgrammingProjects\\recipe-app\\src\\components\\PasswordReset.jsx":"11","D:\\ProgrammingProjects\\recipe-app\\src\\components\\UpdateProfile.jsx":"12","D:\\ProgrammingProjects\\recipe-app\\src\\recipeContext.js":"13","D:\\ProgrammingProjects\\recipe-app\\src\\contexts\\DatabaseContext.js":"14","D:\\ProgrammingProjects\\recipe-app\\src\\components\\PrivateRoute.jsx":"15"},{"size":573,"mtime":1627944288842,"results":"16","hashOfConfig":"17"},{"size":1484,"mtime":1627994491416,"results":"18","hashOfConfig":"17"},{"size":7547,"mtime":1627995564400,"results":"19","hashOfConfig":"17"},{"size":4506,"mtime":1627840908640,"results":"20","hashOfConfig":"17"},{"size":2652,"mtime":1627994753408,"results":"21","hashOfConfig":"17"},{"size":1098,"mtime":1627947917009,"results":"22","hashOfConfig":"17"},{"size":1196,"mtime":1627939848354,"results":"23","hashOfConfig":"17"},{"size":1380,"mtime":1627940255340,"results":"24","hashOfConfig":"17"},{"size":1907,"mtime":1627938023481,"results":"25","hashOfConfig":"17"},{"size":1521,"mtime":1627938025535,"results":"26","hashOfConfig":"17"},{"size":1516,"mtime":1627938851112,"results":"27","hashOfConfig":"17"},{"size":2079,"mtime":1627941156341,"results":"28","hashOfConfig":"17"},{"size":1120,"mtime":1627943270979,"results":"29","hashOfConfig":"17"},{"size":1183,"mtime":1627948732031,"results":"30","hashOfConfig":"17"},{"size":425,"mtime":1627994158834,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"apipf1",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"34"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"34"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"34"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\ProgrammingProjects\\recipe-app\\src\\index.js",[],["67","68"],"D:\\ProgrammingProjects\\recipe-app\\src\\App.js",[],"D:\\ProgrammingProjects\\recipe-app\\src\\pages\\addRecipe.js",["69","70"],"D:\\ProgrammingProjects\\recipe-app\\src\\pages\\recipes.js",["71"],"import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../styles/recipes.css\";\r\nimport { updateRecipesDB } from \"../services/firestore\";\r\n\r\nexport const Recipes = ({ recipes }) => {\r\n  const [searchValue, setSearchValue] = useState({\r\n    text: \"\",\r\n    isSorted: false,\r\n  });\r\n  const [sortedArr, setSortedArr] = useState(recipes);\r\n\r\n  function handleChange(e) {\r\n    const { name, value } = e.target;\r\n    setSearchValue((prevValue) => ({\r\n      ...prevValue,\r\n      [name]: value,\r\n    }));\r\n  }\r\n\r\n  function sortBy(e) {\r\n    let sortedRecipes;\r\n\r\n    switch (e.target.name) {\r\n      case \"prepTime\":\r\n        if (searchValue.isSorted) {\r\n          sortedRecipes = [...sortedArr].sort((a, b) =>\r\n            parseInt(a[e.target.name]) > parseInt(b[e.target.name]) ? -1 : 1\r\n          );\r\n          setSearchValue((prevState) => ({\r\n            ...prevState,\r\n            isSorted: !prevState.isSorted,\r\n          }));\r\n        } else {\r\n          sortedRecipes = [...sortedArr].sort((a, b) =>\r\n            parseInt(a[e.target.name]) > parseInt(b[e.target.name]) ? 1 : -1\r\n          );\r\n          setSearchValue((prevState) => ({\r\n            ...prevState,\r\n            isSorted: !prevState.isSorted,\r\n          }));\r\n        }\r\n        setSortedArr(sortedRecipes);\r\n        break;\r\n      case \"difficulty\":\r\n        if (searchValue.isSorted) {\r\n          sortedRecipes = [...sortedArr].sort((a, b) =>\r\n            a[e.target.name] === \"Beginner\"\r\n              ? -1\r\n              : b[e.target.name] === \"Expert\"\r\n              ? -1\r\n              : 1\r\n          );\r\n          setSearchValue((prevState) => ({\r\n            ...prevState,\r\n            isSorted: !prevState.isSorted,\r\n          }));\r\n        } else {\r\n          sortedRecipes = [...sortedArr].sort((a, b) =>\r\n            a[e.target.name] === \"Beginner\"\r\n              ? 1\r\n              : b[e.target.name] === \"Expert\"\r\n              ? 1\r\n              : -1\r\n          );\r\n          setSearchValue((prevState) => ({\r\n            ...prevState,\r\n            isSorted: !prevState.isSorted,\r\n          }));\r\n        }\r\n        setSortedArr(sortedRecipes);\r\n        break;\r\n      default:\r\n        if (searchValue.isSorted) {\r\n          sortedRecipes = [...sortedArr].sort((a, b) =>\r\n            a[e.target.name] > b[e.target.name] ? -1 : 1\r\n          );\r\n          setSearchValue((prevState) => ({\r\n            ...prevState,\r\n            isSorted: !prevState.isSorted,\r\n          }));\r\n        } else {\r\n          sortedRecipes = [...sortedArr].sort((a, b) =>\r\n            a[e.target.name] > b[e.target.name] ? 1 : -1\r\n          );\r\n          setSearchValue((prevState) => ({\r\n            ...prevState,\r\n            isSorted: !prevState.isSorted,\r\n          }));\r\n        }\r\n        setSortedArr(sortedRecipes);\r\n        break;\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    searchValue.text\r\n      ? setSortedArr(\r\n          [...sortedArr].filter((recipe) =>\r\n            recipe.title.toLowerCase().includes(searchValue.text.toLowerCase())\r\n          )\r\n        )\r\n      : console.log(\"notext\");\r\n    // eslint-disable-next-line\r\n  }, [searchValue.text]);\r\n\r\n  return (\r\n    <div className=\"recipes\">\r\n      <div className=\"recipes-menu\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Search for recipe\"\r\n          onChange={handleChange}\r\n          value={searchValue.text}\r\n          name=\"text\"\r\n        />\r\n        <button onClick={sortBy} name=\"name\">\r\n          SORT BY NAME\r\n        </button>\r\n        <button onClick={sortBy} name=\"difficulty\">\r\n          SORT BY DIFFICULTY\r\n        </button>\r\n        <button onClick={sortBy} name=\"prepTime\">\r\n          SORT BY PREPARATION TIME\r\n        </button>\r\n      </div>\r\n      <ul className=\"recipes-list\">\r\n        {sortedArr\r\n          ? sortedArr.map((recipe, idx) => (\r\n              <li key={recipe.id}>\r\n                <div className=\"recipes-top\">\r\n                  <Link className=\"recipes__link\" to={`/recipes/${recipe.id}`}>\r\n                    <h3>{recipe.title}</h3>\r\n                  </Link>\r\n                  <div className=\"recipes-top-info\">\r\n                    <h5>Preparation time: {recipe.prepTime + \" min\"}</h5>\r\n                    <h5>Difficulty level: {recipe.difficulty}</h5>\r\n                    <h5>Number of servings: {recipe.rations}</h5>\r\n                  </div>\r\n                </div>\r\n              </li>\r\n            ))\r\n          : \"<h2>NO DATA</h2>\"}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n","D:\\ProgrammingProjects\\recipe-app\\src\\pages\\recipeDetail.js",[],"D:\\ProgrammingProjects\\recipe-app\\src\\services\\firestore.js",[],"D:\\ProgrammingProjects\\recipe-app\\src\\components\\Navbar.js",["72"],"import React, { useState } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { useAuth } from \"../contexts/AuthContext\";\r\nimport \"../styles/Navbar.css\";\r\n\r\nexport const Navbar = () => {\r\n  const [error, setError] = useState(\"\");\r\n  const { currentUser, logout } = useAuth();\r\n  const history = useHistory();\r\n\r\n  const handleLogOut = async () => {\r\n    setError(\"\");\r\n    try {\r\n      await logout();\r\n      history.push(\"/\");\r\n    } catch (error) {\r\n      setError(\"Failed to Log Out!\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"navbar\">\r\n      <nav>\r\n        <Link className=\"logo-link\" to=\"/sign-up\">\r\n          <h1 className=\"logo\">\r\n            Digital CookBook <img src=\"/cookbook-logo.png\" alt=\"logo\" />\r\n          </h1>\r\n        </Link>\r\n        <Link to=\"/add-recipe\">Add new recipe</Link>\r\n        <Link to=\"/recipes\">Recipes</Link>\r\n        {currentUser && <Link to=\"/update-profile\">Profile</Link>}\r\n        <strong>\r\n          {currentUser && `Logged in as ${currentUser.email}`}\r\n          <button onClick={handleLogOut}>\r\n            {currentUser ? \"Log Out\" : \"Log In\"}\r\n          </button>\r\n        </strong>\r\n      </nav>\r\n    </div>\r\n  );\r\n};\r\n","D:\\ProgrammingProjects\\recipe-app\\src\\contexts\\AuthContext.js",[],"D:\\ProgrammingProjects\\recipe-app\\src\\components\\SignUp.jsx",[],"D:\\ProgrammingProjects\\recipe-app\\src\\components\\Login.jsx",[],"D:\\ProgrammingProjects\\recipe-app\\src\\components\\PasswordReset.jsx",["73"],"import React, { useRef, useState } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { useAuth } from \"../contexts/AuthContext\";\r\nimport \"../styles/PasswordReset.css\";\r\n\r\nexport const PasswordReset = () => {\r\n  const emailRef = useRef();\r\n  const { resetPassword } = useAuth();\r\n  const [error, setError] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      setError(\"\");\r\n      setMessage(\"\");\r\n      setLoading(true);\r\n      await resetPassword(emailRef.current.value);\r\n      setMessage(\"Check your inbox for further instructions!\");\r\n    } catch (error) {\r\n      setError(\"Failed to reset password!\");\r\n    }\r\n\r\n    setLoading(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"signup\">\r\n      <h2>Reset Password</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        {error && <h2 style={{ color: \"red\" }}>{error}</h2>}\r\n        {message && <h2 style={{ color: \"green\" }}>{message}</h2>}\r\n        <label>Email</label>\r\n        <input type=\"email\" name=\"email\" required ref={emailRef} />\r\n        <button disabled={loading} type=\"submit\">\r\n          Reset Password\r\n        </button>\r\n        <button disabled={loading} type=\"submit\">\r\n          <Link to=\"/\">Log In</Link>\r\n        </button>\r\n      </form>\r\n      <div className=\"link-container\">\r\n        Need an account? <Link to=\"/sign-up\">Sign Up</Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","D:\\ProgrammingProjects\\recipe-app\\src\\components\\UpdateProfile.jsx",[],"D:\\ProgrammingProjects\\recipe-app\\src\\recipeContext.js",["74","75"],"import React, { useState, useContext } from \"react\";\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\n\r\nconst RecipeContext = React.createContext();\r\n\r\nfunction RecipeContextProvider(props) {\r\n  const [recipesDatabase, setRecipesDatabase] = useState(\r\n    localStorage.getItem(\"recipes\")\r\n      ? JSON.parse(localStorage.getItem(\"recipes\"))\r\n      : []\r\n  );\r\n\r\n  function addNewRecipe(props) {\r\n    setRecipesDatabase((prevState) =>\r\n      localStorage.setItem(\"recipes\", JSON.stringify([...prevState, props]))\r\n    );\r\n  }\r\n\r\n  function editRecipe(value, id) {\r\n    let recipesCopy = [...JSON.parse(localStorage.getItem(\"recipes\"))];\r\n    recipesCopy = recipesCopy.map((recipe) =>\r\n      recipe.id === id ? { ...recipe, note: [...recipe.note, value] } : recipe\r\n    );\r\n    setRecipesDatabase(\r\n      localStorage.setItem(\"recipes\", JSON.stringify(recipesCopy))\r\n    );\r\n  }\r\n\r\n  return (\r\n    <RecipeContext.Provider\r\n      value={{ recipesDatabase, addNewRecipe, editRecipe }}\r\n    >\r\n      {props.children}\r\n    </RecipeContext.Provider>\r\n  );\r\n}\r\n\r\nexport { RecipeContextProvider, RecipeContext };\r\n","D:\\ProgrammingProjects\\recipe-app\\src\\contexts\\DatabaseContext.js",[],"D:\\ProgrammingProjects\\recipe-app\\src\\components\\PrivateRoute.jsx",[],{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","severity":1,"message":"81","line":98,"column":29,"nodeType":"82","messageId":"83","endLine":98,"endColumn":31},{"ruleId":"80","severity":1,"message":"81","line":106,"column":58,"nodeType":"82","messageId":"83","endLine":106,"endColumn":60},{"ruleId":"84","severity":1,"message":"85","line":4,"column":10,"nodeType":"86","messageId":"87","endLine":4,"endColumn":25},{"ruleId":"84","severity":1,"message":"88","line":7,"column":10,"nodeType":"86","messageId":"87","endLine":7,"endColumn":15},{"ruleId":"84","severity":1,"message":"89","line":2,"column":16,"nodeType":"86","messageId":"87","endLine":2,"endColumn":26},{"ruleId":"84","severity":1,"message":"90","line":1,"column":27,"nodeType":"86","messageId":"87","endLine":1,"endColumn":37},{"ruleId":"84","severity":1,"message":"91","line":2,"column":8,"nodeType":"86","messageId":"87","endLine":2,"endColumn":16},"no-native-reassign",["92"],"no-negated-in-lhs",["93"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-unused-vars","'updateRecipesDB' is defined but never used.","Identifier","unusedVar","'error' is assigned a value but never used.","'useHistory' is defined but never used.","'useContext' is defined but never used.","'firebase' is defined but never used.","no-global-assign","no-unsafe-negation"]