[{"D:\\ProgrammingProjects\\recipe-app\\src\\index.js":"1","D:\\ProgrammingProjects\\recipe-app\\src\\App.js":"2","D:\\ProgrammingProjects\\recipe-app\\src\\pages\\addRecipe.js":"3","D:\\ProgrammingProjects\\recipe-app\\src\\pages\\recipes.js":"4","D:\\ProgrammingProjects\\recipe-app\\src\\pages\\recipeDetail.js":"5","D:\\ProgrammingProjects\\recipe-app\\src\\services\\firestore.js":"6","D:\\ProgrammingProjects\\recipe-app\\src\\components\\Navbar.js":"7","D:\\ProgrammingProjects\\recipe-app\\src\\contexts\\AuthContext.js":"8","D:\\ProgrammingProjects\\recipe-app\\src\\components\\SignUp.jsx":"9","D:\\ProgrammingProjects\\recipe-app\\src\\components\\Login.jsx":"10","D:\\ProgrammingProjects\\recipe-app\\src\\components\\PasswordReset.jsx":"11","D:\\ProgrammingProjects\\recipe-app\\src\\components\\UpdateProfile.jsx":"12","D:\\ProgrammingProjects\\recipe-app\\src\\recipeContext.js":"13","D:\\ProgrammingProjects\\recipe-app\\src\\contexts\\DatabaseContext.js":"14","D:\\ProgrammingProjects\\recipe-app\\src\\components\\PrivateRoute.jsx":"15"},{"size":573,"mtime":1627944288842,"results":"16","hashOfConfig":"17"},{"size":1532,"mtime":1627996387541,"results":"18","hashOfConfig":"17"},{"size":7547,"mtime":1627996387581,"results":"19","hashOfConfig":"17"},{"size":4615,"mtime":1627999316494,"results":"20","hashOfConfig":"17"},{"size":2674,"mtime":1628001693345,"results":"21","hashOfConfig":"17"},{"size":1098,"mtime":1627996387583,"results":"22","hashOfConfig":"17"},{"size":1189,"mtime":1628028530349,"results":"23","hashOfConfig":"17"},{"size":1380,"mtime":1627940255340,"results":"24","hashOfConfig":"17"},{"size":1907,"mtime":1627938023481,"results":"25","hashOfConfig":"17"},{"size":1521,"mtime":1627938025535,"results":"26","hashOfConfig":"17"},{"size":1516,"mtime":1627938851112,"results":"27","hashOfConfig":"17"},{"size":2079,"mtime":1627941156341,"results":"28","hashOfConfig":"17"},{"size":1120,"mtime":1627943270979,"results":"29","hashOfConfig":"17"},{"size":1183,"mtime":1627996387580,"results":"30","hashOfConfig":"17"},{"size":425,"mtime":1627996387578,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"apipf1",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"34"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"34"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"34"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"34"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"D:\\ProgrammingProjects\\recipe-app\\src\\index.js",[],["67","68"],"D:\\ProgrammingProjects\\recipe-app\\src\\App.js",[],"D:\\ProgrammingProjects\\recipe-app\\src\\pages\\addRecipe.js",["69","70"],"import React, { useEffect, useState } from \"react\";\r\nimport \"../styles/addRecipe.css\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { useAuth } from \"../contexts/AuthContext\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport const AddRecipe = ({ addNewRecipe }) => {\r\n  const { currentUser } = useAuth();\r\n  const history = useHistory();\r\n  const [message, setMessage] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const [inputTxt, setInputTxt] = useState({\r\n    id: uuidv4(),\r\n    date: new Date().toDateString(),\r\n    title: \"\",\r\n    prepTime: \"\",\r\n    rations: \"\",\r\n    difficulty: \"\",\r\n    ingredient: \"\",\r\n    listOfIngredients: [],\r\n    step: \"\",\r\n    method: [],\r\n    note: [],\r\n    createdBy: \"\",\r\n  });\r\n\r\n  function handleChange(e) {\r\n    const { name, value } = e.target;\r\n    setInputTxt((prevInput) => ({\r\n      ...prevInput,\r\n      [name]: value,\r\n    }));\r\n  }\r\n\r\n  async function onSubmit(e) {\r\n    e.preventDefault();\r\n    if (!currentUser) {\r\n      return history.push(\"/\");\r\n    }\r\n    try {\r\n      await addNewRecipe(inputTxt);\r\n      setInputTxt({\r\n        id: uuidv4(),\r\n        date: new Date().toDateString(),\r\n        title: \"\",\r\n        prepTime: \"\",\r\n        rations: \"\",\r\n        difficulty: \"\",\r\n        ingredient: \"\",\r\n        listOfIngredients: [],\r\n        step: \"\",\r\n        method: [],\r\n        note: [],\r\n        createdBy: \"\",\r\n      });\r\n      setMessage(\"Recipe was added sucefully!\");\r\n    } catch (error) {\r\n      setError(\"Failed to added the recipe!\");\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  function addIngToList(e) {\r\n    const { name } = e.target;\r\n    switch (name) {\r\n      case \"ingredient\":\r\n        setInputTxt((prevInput) => ({\r\n          ...prevInput,\r\n          listOfIngredients: [\r\n            ...inputTxt.listOfIngredients,\r\n            inputTxt.ingredient,\r\n          ],\r\n          ingredient: \"\",\r\n        }));\r\n\r\n        break;\r\n      case \"step\":\r\n        setInputTxt((prevInput) => ({\r\n          ...prevInput,\r\n          method: [...inputTxt.method, inputTxt.step],\r\n          step: \"\",\r\n        }));\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  function deleteFromList(e) {\r\n    const { name } = e.target;\r\n    switch (name) {\r\n      case \"ingredient\":\r\n        console.log(e.target.id);\r\n        setInputTxt((prevInput) => ({\r\n          ...prevInput,\r\n          listOfIngredients: inputTxt.listOfIngredients.filter(\r\n            (i, idx) => idx != e.target.id\r\n          ),\r\n        }));\r\n        break;\r\n      case \"step\":\r\n        console.log(e.target.id);\r\n        setInputTxt((prevInput) => ({\r\n          ...prevInput,\r\n          method: inputTxt.method.filter((i, idx) => idx != e.target.id),\r\n        }));\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    if (currentUser) {\r\n      setInputTxt((prevInput) => ({\r\n        ...prevInput,\r\n        createdBy: currentUser.email,\r\n      }));\r\n    }\r\n  }, [currentUser]);\r\n  useEffect(() => {}, [inputTxt]);\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"addRecipe\">\r\n        <h2>Add a new recipe</h2>\r\n        <form className=\"addRecipeForm\" onSubmit={onSubmit}>\r\n          <div className=\"recipe-info\">\r\n            <h3>Recipe Info</h3>\r\n            <label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"title\"\r\n                value={inputTxt.title}\r\n                onChange={handleChange}\r\n                placeholder=\"Recipe name\"\r\n                className=\"info\"\r\n              />\r\n            </label>\r\n            <label>\r\n              <input\r\n                type=\"number\"\r\n                name=\"prepTime\"\r\n                value={inputTxt.prepTime}\r\n                onChange={handleChange}\r\n                placeholder=\"Preparation time\"\r\n              />\r\n            </label>\r\n            <label>\r\n              <select\r\n                name=\"difficulty\"\r\n                value={inputTxt.difficulty}\r\n                onChange={handleChange}\r\n                className=\"addRecipe__option--default\"\r\n              >\r\n                <option defaultValue value=\"-----\">\r\n                  Difficulty\r\n                </option>\r\n                <option value=\"Beginner\">Beginer</option>\r\n                <option value=\"Advanced\">Advanced</option>\r\n                <option value=\"Expert\">Expert</option>\r\n              </select>\r\n            </label>\r\n            <label>\r\n              <input\r\n                type=\"number\"\r\n                name=\"rations\"\r\n                value={inputTxt.rations}\r\n                onChange={handleChange}\r\n                placeholder=\"Servings\"\r\n              />\r\n            </label>\r\n          </div>\r\n          <div className=\"ingredients-info\">\r\n            <h3>Ingredients</h3>\r\n            <ul>\r\n              {inputTxt.listOfIngredients.length > 0\r\n                ? inputTxt.listOfIngredients.map((ing, idx) => (\r\n                    <li key={ing + Math.floor(Math.random() * 300)}>\r\n                      {\" \"}\r\n                      {ing}{\" \"}\r\n                      <button\r\n                        onClick={deleteFromList}\r\n                        id={idx}\r\n                        name=\"ingredient\"\r\n                        className=\"btn\"\r\n                        type=\"button\"\r\n                      >\r\n                        X\r\n                      </button>\r\n                    </li>\r\n                  ))\r\n                : \"\"}\r\n            </ul>\r\n            <label>\r\n              List of ingredients:\r\n              <div>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"ingredient\"\r\n                  value={inputTxt.ingredient}\r\n                  onChange={handleChange}\r\n                />\r\n                <button\r\n                  onClick={addIngToList}\r\n                  name=\"ingredient\"\r\n                  className=\"btn\"\r\n                  type=\"button\"\r\n                >\r\n                  ADD\r\n                </button>\r\n              </div>\r\n            </label>\r\n          </div>\r\n          <div className=\"recipe-text\">\r\n            <h3>Preparation method</h3>\r\n            <ol>\r\n              {inputTxt.method.length > 0\r\n                ? inputTxt.method.map((ing, idx) => (\r\n                    <li key={ing + Math.floor(Math.random() * 300)}>\r\n                      {\" \"}\r\n                      {ing}{\" \"}\r\n                      <button\r\n                        onClick={deleteFromList}\r\n                        id={idx}\r\n                        name=\"step\"\r\n                        className=\"btn\"\r\n                        type=\"button\"\r\n                      >\r\n                        X\r\n                      </button>\r\n                    </li>\r\n                  ))\r\n                : \"\"}\r\n            </ol>\r\n            <label>\r\n              <textarea\r\n                name=\"step\"\r\n                value={inputTxt.step}\r\n                onChange={handleChange}\r\n                rows=\"5\"\r\n                cols=\"40\"\r\n                placeholder=\"Add a new step\"\r\n              />\r\n              <button\r\n                onClick={addIngToList}\r\n                name=\"step\"\r\n                className=\"btn\"\r\n                type=\"button\"\r\n              >\r\n                ADD\r\n              </button>\r\n            </label>\r\n          </div>\r\n        </form>\r\n        <button className=\"btn-submit\" onClick={onSubmit} type=\"submit\">\r\n          Save recipe!\r\n        </button>\r\n        {error && <h3>{error}</h3>}\r\n        {message && <h3>{message}</h3>}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","D:\\ProgrammingProjects\\recipe-app\\src\\pages\\recipes.js",["71","72"],"import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../styles/recipes.css\";\r\n\r\nexport const Recipes = ({ recipes }) => {\r\n  const [searchValue, setSearchValue] = useState({\r\n    text: \"\",\r\n    isSorted: false,\r\n  });\r\n  const [sortedArr, setSortedArr] = useState(recipes);\r\n\r\n  function handleChange(e) {\r\n    const { name, value } = e.target;\r\n    setSearchValue((prevValue) => ({\r\n      ...prevValue,\r\n      [name]: value,\r\n    }));\r\n  }\r\n\r\n  function sortBy(e) {\r\n    let sortedRecipes;\r\n\r\n    switch (e.target.name) {\r\n      case \"prepTime\":\r\n        if (searchValue.isSorted) {\r\n          sortedRecipes = [...sortedArr].sort((a, b) =>\r\n            parseInt(a[e.target.name]) > parseInt(b[e.target.name]) ? -1 : 1\r\n          );\r\n          setSearchValue((prevState) => ({\r\n            ...prevState,\r\n            isSorted: !prevState.isSorted,\r\n          }));\r\n        } else {\r\n          sortedRecipes = [...sortedArr].sort((a, b) =>\r\n            parseInt(a[e.target.name]) > parseInt(b[e.target.name]) ? 1 : -1\r\n          );\r\n          setSearchValue((prevState) => ({\r\n            ...prevState,\r\n            isSorted: !prevState.isSorted,\r\n          }));\r\n        }\r\n        setSortedArr(sortedRecipes);\r\n        break;\r\n      case \"difficulty\":\r\n        if (searchValue.isSorted) {\r\n          sortedRecipes = [...sortedArr].sort((a, b) =>\r\n            a[e.target.name] === \"Beginner\"\r\n              ? -1\r\n              : b[e.target.name] === \"Expert\"\r\n              ? -1\r\n              : 1\r\n          );\r\n          setSearchValue((prevState) => ({\r\n            ...prevState,\r\n            isSorted: !prevState.isSorted,\r\n          }));\r\n        } else {\r\n          sortedRecipes = [...sortedArr].sort((a, b) =>\r\n            a[e.target.name] === \"Beginner\"\r\n              ? 1\r\n              : b[e.target.name] === \"Expert\"\r\n              ? 1\r\n              : -1\r\n          );\r\n          setSearchValue((prevState) => ({\r\n            ...prevState,\r\n            isSorted: !prevState.isSorted,\r\n          }));\r\n        }\r\n        setSortedArr(sortedRecipes);\r\n        break;\r\n      default:\r\n        if (searchValue.isSorted) {\r\n          sortedRecipes = [...sortedArr].sort((a, b) =>\r\n            a.title.toLowerCase() > b.title.toLowerCase() ? -1 : 1\r\n          );\r\n          setSearchValue((prevState) => ({\r\n            ...prevState,\r\n            isSorted: !prevState.isSorted,\r\n          }));\r\n        } else {\r\n          sortedRecipes = [...sortedArr].sort((a, b) =>\r\n            a.title.toLowerCase() > b.title.toLowerCase() ? 1 : -1\r\n          );\r\n          setSearchValue((prevState) => ({\r\n            ...prevState,\r\n            isSorted: !prevState.isSorted,\r\n          }));\r\n        }\r\n        setSortedArr(sortedRecipes);\r\n        break;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"recipes\">\r\n      <div className=\"recipes-menu\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Search for recipe\"\r\n          onChange={handleChange}\r\n          value={searchValue.text}\r\n          name=\"text\"\r\n        />\r\n        <button onClick={sortBy} name=\"name\">\r\n          SORT BY NAME\r\n        </button>\r\n        <button onClick={sortBy} name=\"difficulty\">\r\n          SORT BY DIFFICULTY\r\n        </button>\r\n        <button onClick={sortBy} name=\"prepTime\">\r\n          SORT BY PREPARATION TIME\r\n        </button>\r\n      </div>\r\n      <ul className=\"recipes-list\">\r\n        {sortedArr\r\n          ? sortedArr\r\n              .filter((val) => {\r\n                if (searchValue.text == \"\") {\r\n                  return val;\r\n                } else if (\r\n                  val.title\r\n                    .toLowerCase()\r\n                    .includes(searchValue.text.toLowerCase())\r\n                ) {\r\n                  return val;\r\n                }\r\n              })\r\n              .map((recipe, idx) => (\r\n                <li key={recipe.id}>\r\n                  <div className=\"recipes-top\">\r\n                    <Link\r\n                      className=\"recipes__link\"\r\n                      to={`/recipes/${recipe.id}`}\r\n                    >\r\n                      <h3>{recipe.title}</h3>\r\n                    </Link>\r\n                    <div className=\"recipes-top-info\">\r\n                      <h5>Preparation time: {recipe.prepTime + \" min\"}</h5>\r\n                      <h5>Difficulty level: {recipe.difficulty}</h5>\r\n                      <h5>Number of servings: {recipe.rations}</h5>\r\n                    </div>\r\n                  </div>\r\n                </li>\r\n              ))\r\n          : \"<h2>NO DATA</h2>\"}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n","D:\\ProgrammingProjects\\recipe-app\\src\\pages\\recipeDetail.js",[],"D:\\ProgrammingProjects\\recipe-app\\src\\services\\firestore.js",[],"D:\\ProgrammingProjects\\recipe-app\\src\\components\\Navbar.js",["73"],"D:\\ProgrammingProjects\\recipe-app\\src\\contexts\\AuthContext.js",[],"D:\\ProgrammingProjects\\recipe-app\\src\\components\\SignUp.jsx",[],"D:\\ProgrammingProjects\\recipe-app\\src\\components\\Login.jsx",[],"D:\\ProgrammingProjects\\recipe-app\\src\\components\\PasswordReset.jsx",["74"],"import React, { useRef, useState } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { useAuth } from \"../contexts/AuthContext\";\r\nimport \"../styles/PasswordReset.css\";\r\n\r\nexport const PasswordReset = () => {\r\n  const emailRef = useRef();\r\n  const { resetPassword } = useAuth();\r\n  const [error, setError] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      setError(\"\");\r\n      setMessage(\"\");\r\n      setLoading(true);\r\n      await resetPassword(emailRef.current.value);\r\n      setMessage(\"Check your inbox for further instructions!\");\r\n    } catch (error) {\r\n      setError(\"Failed to reset password!\");\r\n    }\r\n\r\n    setLoading(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"signup\">\r\n      <h2>Reset Password</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        {error && <h2 style={{ color: \"red\" }}>{error}</h2>}\r\n        {message && <h2 style={{ color: \"green\" }}>{message}</h2>}\r\n        <label>Email</label>\r\n        <input type=\"email\" name=\"email\" required ref={emailRef} />\r\n        <button disabled={loading} type=\"submit\">\r\n          Reset Password\r\n        </button>\r\n        <button disabled={loading} type=\"submit\">\r\n          <Link to=\"/\">Log In</Link>\r\n        </button>\r\n      </form>\r\n      <div className=\"link-container\">\r\n        Need an account? <Link to=\"/sign-up\">Sign Up</Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","D:\\ProgrammingProjects\\recipe-app\\src\\components\\UpdateProfile.jsx",[],"D:\\ProgrammingProjects\\recipe-app\\src\\recipeContext.js",["75","76"],"import React, { useState, useContext } from \"react\";\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\n\r\nconst RecipeContext = React.createContext();\r\n\r\nfunction RecipeContextProvider(props) {\r\n  const [recipesDatabase, setRecipesDatabase] = useState(\r\n    localStorage.getItem(\"recipes\")\r\n      ? JSON.parse(localStorage.getItem(\"recipes\"))\r\n      : []\r\n  );\r\n\r\n  function addNewRecipe(props) {\r\n    setRecipesDatabase((prevState) =>\r\n      localStorage.setItem(\"recipes\", JSON.stringify([...prevState, props]))\r\n    );\r\n  }\r\n\r\n  function editRecipe(value, id) {\r\n    let recipesCopy = [...JSON.parse(localStorage.getItem(\"recipes\"))];\r\n    recipesCopy = recipesCopy.map((recipe) =>\r\n      recipe.id === id ? { ...recipe, note: [...recipe.note, value] } : recipe\r\n    );\r\n    setRecipesDatabase(\r\n      localStorage.setItem(\"recipes\", JSON.stringify(recipesCopy))\r\n    );\r\n  }\r\n\r\n  return (\r\n    <RecipeContext.Provider\r\n      value={{ recipesDatabase, addNewRecipe, editRecipe }}\r\n    >\r\n      {props.children}\r\n    </RecipeContext.Provider>\r\n  );\r\n}\r\n\r\nexport { RecipeContextProvider, RecipeContext };\r\n","D:\\ProgrammingProjects\\recipe-app\\src\\contexts\\DatabaseContext.js",[],"D:\\ProgrammingProjects\\recipe-app\\src\\components\\PrivateRoute.jsx",[],{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","severity":1,"message":"82","line":98,"column":29,"nodeType":"83","messageId":"84","endLine":98,"endColumn":31},{"ruleId":"81","severity":1,"message":"82","line":106,"column":58,"nodeType":"83","messageId":"84","endLine":106,"endColumn":60},{"ruleId":"85","severity":1,"message":"86","line":118,"column":29,"nodeType":"87","messageId":"88","endLine":118,"endColumn":31},{"ruleId":"81","severity":1,"message":"89","line":119,"column":38,"nodeType":"83","messageId":"84","endLine":119,"endColumn":40},{"ruleId":"90","severity":1,"message":"91","line":7,"column":10,"nodeType":"92","messageId":"93","endLine":7,"endColumn":15},{"ruleId":"90","severity":1,"message":"94","line":2,"column":16,"nodeType":"92","messageId":"93","endLine":2,"endColumn":26},{"ruleId":"90","severity":1,"message":"95","line":1,"column":27,"nodeType":"92","messageId":"93","endLine":1,"endColumn":37},{"ruleId":"90","severity":1,"message":"96","line":2,"column":8,"nodeType":"92","messageId":"93","endLine":2,"endColumn":16},"no-native-reassign",["97"],"no-negated-in-lhs",["98"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","Expected '===' and instead saw '=='.","no-unused-vars","'error' is assigned a value but never used.","Identifier","unusedVar","'useHistory' is defined but never used.","'useContext' is defined but never used.","'firebase' is defined but never used.","no-global-assign","no-unsafe-negation"]